import * as React from "react";
import { PropertyControls, ControlType } from "framer";

import styled from 'styled-components';
import Icon from '@mdi/react';
import * as MdiIcon from '@mdi/js';

interface Props {
  icon: string;
  width: number;
  height: number;
  color: string;
  specifyHoverColor: boolean;
  hoverColor: string;
}

export class Icon extends React.Component<Props> {
  static defaultProps = {
    icon: "thumb-up",
    width: 24,
    height: 24,
    color: "#0099CC",
    specifyHoverColor: false,
    hoverColor: "#0099CC"
  };

  static propertyControls: PropertyControls = {
    icon: { type: ControlType.String, title: "Icon" },
    color: { type: ControlType.Color, title: "Color" },
    specifyHoverColor: { type: ControlType.Boolean, title: "Enable hover" },
    hoverColor: { 
      type: ControlType.Color, 
      hidden(props) {
        return props.specifyHoverColor === false;
      }, 
      title: "Hover Color" },
  };

  render() {
    String.prototype.toPascalCase = function () {
        return this.match(/[a-z]+/gi)
            .map(function (word) {
            return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase()
            })
            .join('')
    }

    const IconContainer = styled.div`
      display: flex;
      align-items: center;
      justify-content: center;
      &:hover {
        svg path {
          fill: ${this.props.specifyHoverColor ? this.props.hoverColor : this.props.color} !important;
        }
      }
    `;

    const prefix = 'mdi'
    let name = this.props.icon.toPascalCase()

    
    return (
      <IconContainer>
        <Icon
            path={MdiIcon[prefix + name]}
            width={this.props.width}
            height={this.props.height}
            color={this.props.color}
        />
      </IconContainer>
    );
  }
}
